version: '3'

services:

  traefik:
    image: traefik:v2.8
    # Enables the web UI and tells Traefik to listen to docker
    # command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      - 443:443
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /etc/localtime:/etc/localtime:ro

      - /var/run/docker.sock:/var/run/docker.sock
      - "./services/traefik/traefik.dev.yml:/etc/traefik/traefik.yml"
      - ./services/traefik/acme.json:/acme.json
    restart: always

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=https"
      - traefik.http.routers.traefik.rule=(Host(`usadba.rockmedia.dev`) && Path(`/traefik`))
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik-traefik.loadbalancer.server.port=888"

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq
    command: rabbitmq-server
    ports:
        - 5672:5672
        - 15672:15672
    restart: always

    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  application:
    image: amo1csync:latest
    container_name: fastapi
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

    depends_on:
      - rabbitmq
      - redis
    build:
       context: ./
    command: gunicorn app.main:app --bind 0.0.0.0:80 -k uvicorn.workers.UvicornWorker
    # ports:
    #     - 80:80
    volumes:
      - .:/app
    env_file:
      - sync.env
    restart: always
    environment:
          BROKER_HOST: rabbitmq
          REDIS_HOST: redis
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.fastapi.rule=Host(`usadba.rockmedia.dev`)
      - traefik.http.routers.fastapi.tls=true
      - traefik.http.routers.fastapi.tls.certresolver=letsEncrypt
    # ports:
    #   - "8080:80"

  worker:
    image: amo1csync:latest
    container_name: worker
    command: dramatiq app.tasks
    restart: always
    environment:
      BROKER_HOST: rabbitmq
      REDIS_HOST: redis
      PYTHONUNBUFFERED: 0
    env_file:
      - sync.env
    depends_on:
      - application
      - rabbitmq
      - redis

  redis:
      image: "redis:7.0.5"

      ports:
      - "6379:6379"

      volumes:
        - $PWD/redis-data:/var/lib/redis
        - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
