version: '3'

services:

  traefik:
    image: traefik:v2.8
    # Enables the web UI and tells Traefik to listen to docker
    # command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - "./services/traefik/traefik.dev.toml:/etc/traefik/traefik.toml"

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq
    command: rabbitmq-server
    # ports:
    #     - 5672:5672
    #     - 15672:15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  application:
    image: amo1csync:latest
    container_name: fastapi
    # command: uvicorn app.main:app --host 0.0.0.0 --port 80 --reload

    depends_on:
      - rabbitmq
    # build:
    #    context: ./app
    command: gunicorn app.main:app --bind 0.0.0.0:80 -k uvicorn.workers.UvicornWorker
    # expose:
    #   - 8000
    volumes:
      - .:/app

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`176.124.192.230`)"
      - traefik.http.routers.blog.tls=true
      - traefik.http.routers.blog.tls.certresolver=sync
    # ports:
    #   - "8080:80"

  worker:
    image: amo1csync:latest
    container_name: worker
    command: dramatiq app.tasks
    restart: on-failure
    depends_on:
      - application
      - rabbitmq
